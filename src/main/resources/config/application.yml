# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: DEBUG
    io.github.jhipster: DEBUG
    com.icthh.xm.gate: DEBUG
---
# Conditionally disable springdoc on missing api-docs profile
spring:
  config:
    activate:
      on-profile: '!api-docs'
springdoc:
  api-docs:
    enabled: false
---
reactive:
  feign:
    circuit:
      breaker:
        enabled: true
  # client:
  #   config:
  #     default:
  #       connectTimeout: 5000
  #       readTimeout: 5000
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          - configprops
          - env
          - gateway
          - health
          - info
          - jhimetrics
          - jhiopenapigroups
          - logfile
          - loggers
          - prometheus
          - threaddump
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
    env:
      enabled: true
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  prometheus:
    metrics:
      export:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true

spring:
  application:
    name: gate
  cloud:
    inetutils:
      preferredNetworks:
        - 192.168
        - 10.0.0
        - 172.20
    consul:
      discovery:
        healthCheckPath: /management/health
        instanceId: ${spring.application.name}:${spring.application.instance-id:${random.value}}
        service-name: gate
      config:
        watch:
          enabled: false
    gateway:
      default-filters:
        - TokenRelay
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          predicates:
            - name: Path
              args:
                pattern: "'/'+serviceId.toLowerCase()+'/**'"
          filters:
            - name: RewritePath
              args:
                regexp: "'/' + serviceId.toLowerCase() + '/(?<remaining>.*)'"
                replacement: "'/${remaining}'"
      authorized-microservices-endpoints: # Access Control Policy, if left empty for a route, all endpoints will be accessible
        app1: /api,/v2/api-docs # recommended dev configuration
      httpclient:
        pool:
          max-connections: 1000
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by gradle when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: #spring.profiles.active#
    group:
      dev:
        - dev
        - api-docs
        # Uncomment to activate TLS for the dev profile
        #- tls
  jmx:
    enabled: false
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
    web-application-type: reactive
  webflux:
    problemdetails:
      enabled: true
  task:
    execution:
      thread-name-prefix: gate-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: gate-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://uaa:9999
#      client:
#        provider:
#          oidc:
#            issuer-uri: http://localhost:9080/realms/jhipster
#        registration:
#          oidc:
#            client-id: web_app
#            client-secret: web_app
#            scope: openid, profile, email, offline_access # last one for refresh tokens

xm-config:
  enabled: true
#  xm-config-url: http://config:8084
  configMode: FILE
  configDirPath: /home/vosiievska/work/dila/xm-ms-config-repository # this one
  kafka-config-topic: config_topic

server:
  servlet:
    session:
      cookie:
        http-only: true

springdoc:
  show-actuator: true

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'gateApp'
  # By default CORS is disabled. Uncomment to enable.
  # cors:
  #   allowed-origins: "http://localhost:8100,http://localhost:9000"
  #   allowed-methods: "*"
  #   allowed-headers: "*"
  #   exposed-headers: "Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params"
  #   allow-credentials: true
  #   max-age: 1800
  mail:
    from: gate@localhost
  api-docs:
    default-include-pattern: /api/**
    management-include-pattern: /management/**
    title: Gate API
    description: Gate API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  security:
    client-authorization:
      access-token-uri: http://uaa:9999/oauth/token
      token-service-id: uaa
      client-id: internal
      client-secret: internal
    oauth2:
      audience:
        - account
        - api://default
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
application:
  specification-folder-path-pattern: /config/tenants/{tenantName}/gate/xmgatespec/*.yml
  specification-path-pattern: /config/tenants/{tenantName}/gate/${application.specification-name}
  specification-name: xmgatespec.yml

  tenant-properties-path-pattern: /config/tenants/{tenantName}/gate/${application.tenant-properties-name}
  tenant-properties-name: gate.yml
  tenant-properties-domains-config-key: /config/tenants/tenant-domains.yml
  tenant-properties-list-config-key: /config/tenants/tenants-list.json

  hosts:
    - localhost
    - local
  kafka-enabled: true
  kafka-system-queue: system_queue
  retry:
    max-attempts: 3
    delay: 1000 #in milliseconds
    multiplier: 2
